{"ast":null,"code":"import { FormControl } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../data.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/common\";\n\nfunction ConvertComponent_option_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 8);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r2 = ctx.$implicit;\n    i0.ɵɵpropertyInterpolate(\"value\", item_r2.symbol);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" \", item_r2.symbol, \" \", item_r2.description, \"\");\n  }\n}\n\nfunction ConvertComponent_option_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 8);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r3 = ctx.$implicit;\n    i0.ɵɵpropertyInterpolate(\"value\", item_r3.symbol);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" \", item_r3.symbol, \" \", item_r3.description, \"\");\n  }\n}\n\nexport let ConvertComponent = /*#__PURE__*/(() => {\n  class ConvertComponent {\n    constructor(dataService) {\n      this.dataService = dataService;\n      this.symbols = [];\n      this.first = new FormControl('');\n      this.second = new FormControl('');\n      this.firstSymbol = new FormControl('');\n      this.secondSymbol = new FormControl('');\n      this.firstValue = 0;\n      this.secondValue = 0;\n      this.firstSymbolValue = '';\n      this.secondSymbolValue = '';\n      this.convertionResult = 0;\n      this.resDisp = 0;\n    } // selectFirst: any = 'USD';\n    // selectSecond: any = 'UAH';\n    // ============== geting exchange values ==============\n\n\n    getFirstValue() {\n      this.firstValue = this.first.value;\n      this.convertRequestFirst(this.firstValue, this.firstSymbolValue, this.secondSymbolValue);\n    }\n\n    getSecondValue() {\n      this.secondValue = this.second.value;\n      this.convertRequestSecond(this.secondValue, this.secondSymbolValue, this.firstSymbolValue);\n    } // ========geting symbols===============\n\n\n    getFirstSymbolValue() {\n      this.firstSymbolValue = this.firstSymbol.value;\n      this.convertRequestFirst(this.firstValue, this.firstSymbolValue, this.secondSymbolValue);\n    }\n\n    getSecondSymbolValue() {\n      this.secondSymbolValue = this.secondSymbol.value;\n      this.convertRequestSecond(this.secondValue, this.secondSymbolValue, this.firstSymbolValue);\n    } // ========= converting request =======\n\n\n    convertRequestFirst(amount, from, to) {\n      this.dataService.goConvert(amount, from, to).subscribe(data => {\n        this.convertionResult = data.result;\n        this.secondValue = this.convertionResult;\n      });\n    }\n\n    convertRequestSecond(amount, from, to) {\n      this.dataService.goConvert(amount, from, to).subscribe(data => {\n        this.convertionResult = data.result;\n        this.firstValue = this.convertionResult;\n      });\n    }\n\n    ngOnInit() {\n      this.dataService.getSymbols().subscribe(data => {\n        let sym = data.symbols;\n\n        for (let prop in sym) {\n          this.symbols.push({\n            symbol: prop,\n            description: sym[prop].description\n          });\n        }\n      });\n    }\n\n  }\n\n  ConvertComponent.ɵfac = function ConvertComponent_Factory(t) {\n    return new (t || ConvertComponent)(i0.ɵɵdirectiveInject(i1.DataService));\n  };\n\n  ConvertComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ConvertComponent,\n    selectors: [[\"app-convert\"]],\n    decls: 10,\n    vars: 9,\n    consts: [[1, \"converter_conteiner\"], [1, \"inputs\"], [\"name\", \"first\", \"id\", \"first\", 3, \"formControl\", \"change\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"id\", \"first\", \"type\", \"number\", 3, \"value\", \"formControl\", \"input\"], [\"id\", \"second\", \"type\", \"number\", 3, \"value\", \"formControl\", \"input\"], [\"name\", \"second\", \"id\", \"second\", 3, \"formControl\", \"change\"], [1, \"result\"], [3, \"value\"]],\n    template: function ConvertComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"select\", 2);\n        i0.ɵɵlistener(\"change\", function ConvertComponent_Template_select_change_2_listener() {\n          return ctx.getFirstSymbolValue();\n        });\n        i0.ɵɵtemplate(3, ConvertComponent_option_3_Template, 2, 3, \"option\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"input\", 4);\n        i0.ɵɵlistener(\"input\", function ConvertComponent_Template_input_input_4_listener() {\n          return ctx.getFirstValue();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"input\", 5);\n        i0.ɵɵlistener(\"input\", function ConvertComponent_Template_input_input_5_listener() {\n          return ctx.getSecondValue();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"select\", 6);\n        i0.ɵɵlistener(\"change\", function ConvertComponent_Template_select_change_6_listener() {\n          return ctx.getSecondSymbolValue();\n        });\n        i0.ɵɵtemplate(7, ConvertComponent_option_7_Template, 2, 3, \"option\", 3);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(8, \"span\", 7);\n        i0.ɵɵtext(9);\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formControl\", ctx.firstSymbol);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.symbols);\n        i0.ɵɵadvance(1);\n        i0.ɵɵpropertyInterpolate(\"value\", ctx.firstValue);\n        i0.ɵɵproperty(\"formControl\", ctx.first);\n        i0.ɵɵadvance(1);\n        i0.ɵɵpropertyInterpolate(\"value\", ctx.secondValue);\n        i0.ɵɵproperty(\"formControl\", ctx.second);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formControl\", ctx.secondSymbol);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.symbols);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\" result : \", ctx.convertionResult, \" \");\n      }\n    },\n    directives: [i2.SelectControlValueAccessor, i2.NgControlStatus, i2.FormControlDirective, i3.NgForOf, i2.NgSelectOption, i2.ɵNgSelectMultipleOption, i2.NumberValueAccessor, i2.DefaultValueAccessor],\n    styles: [\".converter_conteiner[_ngcontent-%COMP%]{padding:2rem}select[_ngcontent-%COMP%]{max-width:50px;border:none}.inputs[_ngcontent-%COMP%]{display:flex;gap:1rem;align-items:center;justify-content:center;background-color:#84a52a44;border:none;padding:1rem}input[_ngcontent-%COMP%]{border:none;max-font-size:1.2rem}.result[_ngcontent-%COMP%]{margin:3rem;display:flex;align-items:center;justify-content:center;font-size:4rem}\"]\n  });\n  return ConvertComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}